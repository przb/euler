/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle
number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/


fn calc_triangle_num(iterations: u64) -> u64 {
    let mut i = 1;
    let mut total = 0;
    while i <= iterations {
        total += i;
        i += 1;
    }
    return total;
}

fn find_factors(n: u64) -> Vec<u64> {
    let mut v: Vec<u64> = Vec::new();
    let target: u64 = ((n as f64).sqrt() as u64) + 1;
    let mut i: u64 = 1;
    while i < target {
        if n % i == 0 && n/i != i{
            v.push(i);
            v.push(n/i);
        }
        else if n/i == i{
            v.push(i);
        }
        i+=1;
    }
    return v;
}

fn main() {

    let mut i = 1;
    let mut triangle_num;
    let mut v: Vec<u64>;
    loop{
        triangle_num = calc_triangle_num(i);
        v = find_factors(triangle_num);
        
        if v.len() >= 500{
            break;
        }
        i+= 1;
    }

    println!("The triangle number is {}, which is triangle number {}", calc_triangle_num(i), i);
}
